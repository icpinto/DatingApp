services:
  postgres:
    image: postgres:15
    container_name: dating-postgres
    environment:
      POSTGRES_USER: datinguser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: datingdb
    ports:
      - "5440:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./deployments/postgres/000_apply_migrations.sh:/docker-entrypoint-initdb.d/000_apply_migrations.sh:ro
      - ./internals/db/migrations:/migrations:ro
    networks:
      - dating-shared-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-bootstrap:
    image: postgres:15
    container_name: dating-postgres-bootstrap
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: datinguser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: datingdb
    entrypoint: ["/bin/bash", "/scripts/ensure_db_and_schema.sh"]
    networks:
      - dating-shared-net
    volumes:
      - ./deployments/postgres/ensure_db_and_schema.sh:/scripts/ensure_db_and_schema.sh:ro
      - ./internals/db/migrations:/migrations:ro
    restart: "no"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: dating-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - dating-shared-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  dating-app:
    build: .
    image: dating-app:latest
    container_name: dating-app
    environment:
      - DATABASE_URL=postgres://datinguser:yourpassword@postgres:5432/datingdb?sslmode=disable
      - MATCH_SERVICE_URL=http://match-api:8003
      - MESSAGING_SERVICE_URL=
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "8080:8080"
    networks:
      - dating-shared-net
    volumes:
      - uploads-data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      postgres-bootstrap:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  uploads-data:
  postgres-data:

networks:
  dating-shared-net:
    external: true
